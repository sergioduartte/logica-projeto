-- UTILS FOR NUSVM SHELL
------------------------------------
-- $ NuSMV -i <path_to_file.smv>
-- NuSMV > go
-- NuSMV > print_reachable_states -v
-- NuSMV > pick_state -i
-- NuSMV > simulate -i -k 3


MODULE main
  VAR
    usuario: Usuario;


MODULE Usuario
  VAR
    acao: {associarDisp, instalarApp, atualizarApp, removerApp, recarregarConta};
    conta: process Conta(acao);
    aplicativo: process Aplicativo(acao, conta);
    dispositivo: process Dispositivo(acao);

  ASSIGN
    init(acao) := associarDisp;

  -- Todos os estados em que o aplicativo não está instalado significam que o aplicativo não foi removido
  LTLSPEC G(aplicativo.instalado = False) -> X (aplicativo.removido = False);
  
  -- Todos os estados em que o aplicativo está atualizado implicam no aplicativo estar instalado
  LTLSPEC G(aplicativo.atualizado = True) -> X (aplicativo.instalado = True);
  
  -- Todos os estados em que o aplicativo está removido implicam no aplicativo não estar instalado
  LTLSPEC G(aplicativo.removido = True) -> X (aplicativo.instalado = False);
  
  -- O aplicativo pode estar instalado caso o aplicativo não seja pago e a conta não tenha crédito
  LTLSPEC G(conta.containsCredito = False & aplicativo.isPago = False) -> F dispositivo.appInstalado = True;
  
  -- O aplicativo não pode estar instalado caso o aplicativo seja pago e a conta não tenha crédito
  LTLSPEC G(conta.containsCredito = False & aplicativo.isPago = True) -> F dispositivo.appInstalado = False;


MODULE Dispositivo(acao)
  VAR
    associado: {True, False};
    appInstalado: {True, False};

  ASSIGN
    init(associado) := False;
    init(appInstalado) := False;

    next(associado) :=
      case
        acao = associarDisp : {True};
        TRUE: associado;
      esac;

    next(appInstalado) :=
      case
        acao = instalarApp : {True};
        TRUE: appInstalado;
      esac;


MODULE Aplicativo(acao, conta)
  VAR
    instalado: {True, False};
    atualizado: {True, False};
    removido: {True, False};
    isPago: {True, False};

  ASSIGN
    init(instalado) := False;
    init(atualizado) := False;
    init(removido) := False;
    init(isPago) := True;

    next(instalado) :=
      case
        acao=instalarApp & isPago=False : {True};
        acao=instalarApp & isPago=True & conta.containsCredito=True : {True};
        acao=instalarApp & isPago=True & conta.containsCredito=False : {False};
        TRUE : instalado;
      esac;

    next(atualizado) :=
      case
        acao=atualizarApp & atualizado=False & instalado=True & removido=False : {True};
        TRUE : atualizado;
      esac;

    next(removido) :=
      case
        acao=removerApp & instalado=True & removido=False : {True};
        TRUE : removido;
      esac;

    next(isPago) :=
      case
        isPago=True : {False};
        isPago=False : {True};
        TRUE: isPago;
      esac;
      

MODULE Conta(acao)
  VAR
    containsCredito: {True, False};

  ASSIGN
    init(containsCredito) := False;

    next(containsCredito) :=
      case
        acao=recarregarConta : {True};
        TRUE: containsCredito;
      esac;
