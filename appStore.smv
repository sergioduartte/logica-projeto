-- read_model -i <path_to_file.smv>
-- flatten_hierarchy
-- encode_variables
-- build_model
-- print_reachable_states -v
-- pick_state -i
-- simulate -i -k 3

MODULE main
  VAR
    usuario: process Usuario;


MODULE Usuario
  VAR
    associarDisp: {True, False};
    instalarApp: {True, False};
    atualizarApp: {True, False};
    removerApp: {True, False};
    recarregarConta: {True, False};

    conta: process Conta(recarregarConta);
    aplicativo: process Aplicativo(instalarApp, atualizarApp, removerApp, conta);
    dispositivo: process Dispositivo(associarDisp, aplicativo);

  ASSIGN
    init(associarDisp) := True;
    init(instalarApp) := False;
    init(atualizarApp) := False;
    init(removerApp) := False;
    init(recarregarConta) := True;


MODULE Dispositivo(associar, aplicativo)
  VAR
    associado: {True, False};

  ASSIGN
    init(associado) := False;
    next(associado) :=
      case
        associar=True : {True};
        TRUE: associado;
      esac;


MODULE Aplicativo(instalar, atualizar, remover, conta)
  VAR
    instalado: {True, False};
    atualizado: {True, False};
    removido: {True, False};
    isPago: {True, False};

  ASSIGN
    init(instalado) := False;
    init(atualizado) := False;
    init(removido) := False;
    init(isPago) := True;

    next(instalado) :=
      case
        instalar=True & isPago=False : {True};
        instalar=True & isPago=True & conta.containsCredito=True : {True};
        instalar=True & isPago=True & conta.containsCredito=False : {False};
        TRUE : instalado;
      esac;

    next(atualizado) :=
      case
        atualizar=True & atualizado=False & instalado=True & removido=False : {True};
        TRUE : atualizado;
      esac;

    next(removido) :=
      case
        remover=True & instalado=True & removido=False : {True};
        TRUE : removido;
      esac;

    next(isPago) :=
      case
        isPago=True : {False};
        isPago=False : {True};
        TRUE: isPago;
      esac;
      

MODULE Conta(recarregar)
  VAR
    containsCredito: {True, False};

  ASSIGN
    init(containsCredito) := False;

    next(containsCredito) :=
      case
        recarregar=True : {True};
        TRUE: containsCredito;
      esac;
